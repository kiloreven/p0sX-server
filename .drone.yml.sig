eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgdGVzdDoKICAgIGltYWdlOiBweXRob246My41LjIKICAgIGVudmlyb25tZW50OgogICAgICAtIERKQU5HT19TRVRUSU5HU19NT0RVTEU9aW5pdF9kamFuZ28uc2V0dGluZ3MuZGV2CiAgICBjb21tYW5kczoKICAgICAgLSBwaXAgaW5zdGFsbCB0b3gKICAgICAgLSBtYWtlIGVudgogICAgICAtIG1ha2UgZGV2CiAgICAgIC0gbWFrZSBmbGFrZTgKICAgICAgLSB0b3gKCiAgZG9ja2VyOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICByZXBvOiByZWdpc3RyeS5mYXAubm8vcDBzeC9wMHN4CiAgICBpbnNlY3VyZTogdHJ1ZQogICAgdGFnczoKICAgICAgICAtIG1hc3RlcgogICAgd2hlbjoKICAgICAgICBicmFuY2g6IG1hc3RlcgoKICBkb2NrZXI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKICAgIHJlcG86IHJlZ2lzdHJ5LmZhcC5uby9wMHN4L3Awc3gKICAgIGluc2VjdXJlOiB0cnVlCiAgICB0YWdzOgogICAgICAgIC0gbGF0ZXN0CiAgICAgICAgLSAkJFRBRwogICAgd2hlbjoKICAgICAgICBldmVudDogdGFnCgogIHNzaDoKICAgIGltYWdlOiBhcHBsZWJveS9kcm9uZS1zc2gKICAgIGhvc3Q6CiAgICAgLSBwcmltZWFwZS50ZXJyYS5mYXAubm8KICAgIHVzZXI6IHJvb3QKICAgIHBvcnQ6IDIyCiAgICBjb21tYW5kX3RpbWVvdXQ6IDEwMDAKICAgIHNjcmlwdDoKICAgICAgLSBkb2NrZXIgcHVsbCByZWdpc3RyeS5mYXAubm8vcDBzeC9wMHN4OmxhdGVzdAogICAgICAtIGRvY2tlci1jb21wb3NlIC1mIC9zcnYvZG9ja2VyL3Awc3gvZG9ja2VyLWNvbXBvc2UueW1sIGRvd24gcDBzeC1kZXYKICAgICAgLSBkb2NrZXItY29tcG9zZSAtZiAvc3J2L2RvY2tlci9wMHN4L2RvY2tlci1jb21wb3NlLnltbCB1cCAtZCBwMHN4LWRldgogICAgd2hlbjoKICAgICAgICBzdGF0dXM6IHN1Y2Nlc3MKICAgICAgICBicmFuY2g6IG1hc3RlcgoKICBub3RpZnk6CiAgICBpbWFnZTogZHJpbGxzdGVyL2Ryb25lLWVtYWlsCiAgICBob3N0OiBtYWlsLm50bnUuZmFwLm5vCiAgICBwb3J0OiAyNQogICAgZnJvbTogZHJvbmVAZHJvbmUuZmFwLm5vCiAgICByZWNpcGllbnRzOiBbIGtyYWRhbGJ5QGtyYWRhbGJ5Lm5vIF0KICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBzdWNjZXNzLCBjaGFuZ2VkLCBmYWlsdXJlIF0K.xDYuWkVWOKX3vK3kX-xkSOHrwMxf_arl0EUPMwadagM